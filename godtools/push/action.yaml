name: 'Piwik PRO godtools docker image push'
description: 'Installs godtools'
inputs:
  godtools-config:
    required: true
    description: godtools encrypted configuration
  godtools-key:
    required: true
    description: godtools encryption key
  image:
    required: true
    description: Image, that should be pushed to the registry
  registries:
    required: false
    default: acr
    description: List of names of the registries where an image should be pushed (ecr, acr, docker-hub, internal-acr).
  tag-latest:
    required: false
    default: "true"
    description: Prepare desired tag from latest image before pushing it to the registry
  push-tmp-image:
    required: false
    default: "true"
    description: Push tmp image to the registry
  push-develop-image:
    required: false
    default: "false"
    description: Push `image:develop` from branch `develop` to the registry
  skip-signing:
    required: false
    default: "true"
    description: Don't sign pushed images.
runs:
  using: "composite"
  steps:
    - name: Push tmp docker image
      if: ${{ inputs.push-tmp-image == 'true' && !startsWith(github.ref, 'refs/tags') }}
      shell: bash
      run: |
        [ "${{ inputs.tag-latest }}" = "true" ] && docker tag ${{ inputs.image }} ${{ inputs.image }}:tmp-$(git rev-parse --short HEAD);
        godtools docker push --registry-id "${{ inputs.registries }}" ${{ inputs.image }}:tmp-$(git rev-parse --short HEAD)
      env:
        GODTOOLS_CONFIG: ${{ inputs.godtools-config }}
        GODTOOLS_KEY: ${{ inputs.godtools-key }}

    - name: Push develop docker image
      if: ${{ inputs.push-develop-image == 'true' && startsWith(github.ref, 'refs/heads/develop') }}
      shell: bash
      run: |
        [ "${{ inputs.tag-latest }}" = "true" ] && docker tag ${{ inputs.image }} ${{ inputs.image }}:develop;
        godtools docker push --registry-id "${{ inputs.registries }}" ${{ inputs.image }}:develop
      env:
        GODTOOLS_CONFIG: ${{ inputs.godtools-config }}
        GODTOOLS_KEY: ${{ inputs.godtools-key }}

    - name: Push production docker image
      if: startsWith(github.ref, 'refs/tags')
      shell: bash
      run: |
        [ "${{ inputs.tag-latest }}" = "true" ] && docker tag ${{ inputs.image }} ${{ inputs.image }}:${{ github.ref_name }};
        godtools docker push --registry-id "${{ inputs.registries }}" ${{ inputs.image }}:${{ github.ref_name }}
      env:
        GODTOOLS_CONFIG: ${{ inputs.godtools-config }}
        GODTOOLS_KEY: ${{ inputs.godtools-key }}

    - name: Download image signing toolkit (cosign)
      if: ${{ startsWith(github.ref, 'refs/tags') && inputs.skip-signing != 'true' }}
      uses: PiwikPRO/actions/cosign/download@85b53606f434c343f5b885839b188a7376d38d12

    - name: Sign production docker image
      if: ${{ startsWith(github.ref, 'refs/tags') && inputs.skip-signing != 'true' }}
      shell: bash
      run: |
        godtools docker sign --registry-id "${{ inputs.registries }}" ${{ inputs.image }}:${{ github.ref_name }}
      env:
        GODTOOLS_CONFIG: ${{ inputs.godtools-config }}
        GODTOOLS_KEY: ${{ inputs.godtools-key }}
